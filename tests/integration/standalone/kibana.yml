---
- hosts: kibana
  become: yes
  become_method: sudo
  environment:
    http_proxy: "{{ http_proxy | default() }}"
    https_proxy: "{{ https_proxy | default() }}"
    no_proxy: "{{ no_proxy | default() }}"
  roles:
    - role: trombik.apt_repo
      when: ansible_os_family == 'Debian'
    - role: trombik.redhat_repo
      when: ansible_os_family == 'RedHat'
    - name: trombik.nginx
    - name: trombik.language_ruby
    - name: trombik.fluentd
    - role: trombik.opendistroforelasticsearch
    - ansible-role-kibana
  vars:
    apt_repo_keys_to_add:
      - https://artifacts.elastic.co/GPG-KEY-elasticsearch
      - https://d3g5vo6xdbdb9a.cloudfront.net/GPG-KEY-opendistroforelasticsearch
      - https://packages.treasuredata.com/GPG-KEY-td-agent
    apt_repo_to_add:
      - "ppa:openjdk-r/ppa"
      - "deb [arch=amd64] https://d3g5vo6xdbdb9a.cloudfront.net/apt stable main"
      - "deb https://artifacts.elastic.co/packages/oss-7.x/apt stable main"
      - "deb http://packages.treasuredata.com/3/ubuntu/{{ ansible_distribution_release }}/ {{ ansible_distribution_release }} contrib"
    apt_repo_enable_apt_transport_https: yes

    os_language_ruby_package:
      FreeBSD: lang/ruby26
      OpenBSD: ruby%2.6
      RedHat: "{{ __language_ruby_package }}"
      Debian: "{{ __language_ruby_package }}"
    language_ruby_package: "{{ os_language_ruby_package[ansible_os_family] }}"

    # ________________________________________syslog
    # enable UDP forwardning
    os_syslog_conf:
      Debian: /etc/rsyslog.d/50-default.conf
      FreeBSD: /etc/syslog.d/udp_fowarding.conf

    # ________________________________________fluentd

    # add fluentd user to `adm` as it needs to read logs
    fluentd_extra_groups: adm
    os_fluentd_extra_packages:
      FreeBSD: []
      Debian:
        - libgeoip-dev
      OpenBSD: []
      RedHat: []
    fluentd_extra_packages: "{{ os_fluentd_extra_packages[ansible_os_family] }}"
    os_fluentd_flags:
      FreeBSD: "-p {{ fluentd_plugin_dir }}"
      Debian: "-p {{ fluentd_plugin_dir }}"
      RedHat: ""
      OpenBSD: "--daemon /var/run/fluentd/fluentd.pid --config {{ fluentd_config_file }} -p {{ fluentd_plugin_dir }}"
    fluentd_flags: "{{ os_fluentd_flags[ansible_os_family] }} --log {{ fluentd_log_file }}"
    os_fluentd_bin:
      OpenBSD: /usr/local/bin/fluentd26
      FreeBSD: "{{ __fluentd_bin }}"
      RedHat: "{{ __fluentd_bin }}"
      Debian: "{{ __fluentd_bin }}"
    fluentd_bin: "{{ os_fluentd_bin[ansible_os_family] }}"
    fluentd_system_config: |
      log_level debug
      suppress_config_dump
    fluentd_plugins_to_install:
      - fluent-plugin-secure-forward
      - fluent-plugin-github-activities
      - fluent-plugin-record-modifier
      - fluent-plugin-ua-parser
      - fluent-plugin-geoip

    # shared configuration for ES output plugin
    project_fluentd_es_common_conf: |
      @log_level info
      type_name fluentd
      # index_name syslog-%Y%m%d

      # add fluentd routing tags to records
      include_tag_key true
      tag_key tag

      # connection and transport settings
      hosts 127.0.0.1
      port 9200
      ssl_version TLSv1_2
      with_transporter_log true
      user admin
      password admin
      scheme https
      ssl_verify false

      # reconnect on error. the default is false
      reconnect_on_error true
      # reload the nodes addresses upon failure
      reload_on_failure true

      # ES templates
      template_overwrite
      templates { "logstash": "{{ fluentd_config_dir }}/es_templates/logstash_template.json", "nginx_access": "{{ fluentd_config_dir }}/es_templates/nginx_access_template.json" }

      # when fluentd losts events, uncomment this
      # https://github.com/uken/fluent-plugin-elasticsearch/issues/525
      # reload_connections false
      <buffer tag,time>
        flush_mode interval

        # the plugin keep complaining without increasing
        # flush_thread_count to more than 1.
        flush_thread_count 2

        # use short fluash intarval for testing. in prod, you would need
        # to increase the value
        flush_interval 10s

        # `%Y%m%d` in index_name requires this
        timekey 1h
      </buffer>
    fluentd_configs:
      000_input_syslog_forwarder:
        # fluentd listens on 127.0.0.1:5140, and forwards logs to
        # elasticsearch on 127.0.0.1:9200
        enabled: yes
        config: |
          <source>
            @type syslog
            port 5140
            bind 127.0.0.1
            tag syslog
            time_format %b %d %H:%M:%S
            @label @syslog
          </source>
          <label @syslog>
            <match **>
              @type elasticsearch
              {{ project_fluentd_es_common_conf }}
              index_name syslog-%Y%m%d
              include_timestamp true
              template_overwrite
              templates { "logstash": "{{ fluentd_config_dir }}/es_templates/logstash_template.json" }
            </match>
          </label>
      010_input_enginx_access_log:
        enabled: yes
        config: |
          <source>
            @type tail
            tag nginx.access
            path {{ nginx_access_log_file }}
            pos_file {{ fluentd_log_dir }}/access.log.pos
            @label @nginx_access

            # emit unmatched lines when <parse> format is not matched for incoming logs
            # the default is false.
            emit_unmatched_lines true

            # for log roatation
            rotate_wait 5
            <parse>
              @type json
            </parse>
          </source>
          <label @nginx_access>
            <filter **>
              @type record_modifier
              remove_keys _dummy_1
              remove_keys _dummy_2
              <record>

                # avoid empty record in IP data types
                _dummy_1 ${if record['nginx']['http']['x_real_ip'].empty?; record['nginx']['http']['x_real_ip'] = '0.0.0.0'; end; nil}

                # keep the first element in content_type. charset is not
                # interesting.
                #
                # text/css; charset=utf-8
                _dummy_2 ${record['nginx']['http']['response']['content_type'] = record['nginx']['http']['response']['content_type'].split(/\s*;\s*/).first; nil}

                # XXX copy nginx.access.agent to a toplevel field `user_agent'
                # because ua_parser does not support nested keys.
                user_agent ${record['nginx']['access']['agent']}

                # XXX same as `user_agent`. geoip plugin does not support
                # nested keys
                ip ${record['nginx']['access']['remote_ip']}
              </record>
            </filter>
            <filter **>

              # parse user_agent. parsed results can be found at record['ua']
              @type ua_parser
              key_name user_agent
              out_key ua
              delete_key true
            </filter>

            # parse IP address and append geoip field to the record.
            <filter **>
              @type geoip
              geoip_lookup_keys ip
              backend_library geoip2_c
              <record>
                country_name    ${country.names.en["ip"]}
                latitude        ${location.latitude["ip"]}
                longitude       ${location.longitude["ip"]}
                country         ${country.iso_code["ip"]}
                city            ${city.names.en["ip"]}
              </record>
              skip_adding_null_record true
            </filter>
            # move 'ua' and 'geoip' fields back to nginx.access
            <filter **>
              @type record_modifier
              remove_keys _dummy_1, _dummy_2, _dummy_3, _dummy_4, _dummy_5, ua, city, longitude, latitude, country, country_name, ip
              <record>
                _dummy_1 ${ record['nginx']['access']['ua'] = record.key?('ua') ? record['ua'] : "" ; nil }
                _dummy_2 ${ record['nginx']['access']['geoip'] = {} ; nil }
                _dummy_3 ${ record['nginx']['access']['geoip']['city']         = record.key?('city') ? record['city'] : "N/A" ; nil }
                _dummy_3 ${ record['nginx']['access']['geoip']['country']      = record.key?('country') ? record['country'] : "N/A" ; nil }
                _dummy_4 ${ record['nginx']['access']['geoip']['country_name'] = record.key?('country_name') ? record['country_name'] : "N/A" ; nil }
                _dummy_5 ${ record['nginx']['access']['geoip']['location']     = [ record['longitude'], record['latitude'] ] if record.key?('longitude') ; nil }
              </record>
            </filter>
            # forward to ES
            <match **>
              @type elasticsearch
              {{ project_fluentd_es_common_conf }}
              index_name nginx-access-%Y%m%d
              template_overwrite
              templates { "nginx_access": "{{ fluentd_config_dir }}/es_templates/nginx_access_template.json" }
            </match>
          </label>
      020_input_enginx_error_log:
        enabled: yes
        config: |
          <source>
            @type tail
            tag nginx.error
            path {{ nginx_error_log_file }}
            pos_file {{ fluentd_log_dir }}/error.log.pos

            # emit unmatched lines when <parse> format is not matched for incoming logs
            # the default is false.
            emit_unmatched_lines true

            # for log roatation
            rotate_wait 5

            <parse>
              @type regexp

              # 2019/10/26 02:16:21 [emerg] 4947#4947: bind() to 0.0.0.0:80 failed (98: Address already in use)
              expression /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+)#(?<tid>\d+): (?<message>.*)$/
              time_key time
              time_format %Y/%m/%d %H:%M:%S
              keep_time_key true
            </parse>
          </source>
          <label @nginx_error>
            <match **>
              @type elasticsearch
              {{ project_fluentd_es_common_conf }}
              index_name nginx-error-%Y%m%d
            </match>
          </label>
      900_output_es:
        enabled: yes
        config: |
    fluentd_extra_files:
      - path: "{{ fluentd_config_dir }}/es_templates/logstash_template.json"
        state: present
        # XXX for ansible 2.6.x or older, to_nice_json here is required to
        # workaround a bug: https://github.com/ansible/ansible/issues/44897
        # content: "{{ lookup('file', 'files/logstash_template.json') | to_nice_json }}"
        #
        # XXX for ansible 2.7.x or newer, you need `jinja2_native = true` in
        # `[defaults] section of ansible.cfg and no `to_nice_json` filter here.
        # https://docs.ansible.com/ansible/devel/reference_appendices/config.html#default-jinja2-native
        content: "{{ lookup('file', 'files/logstash_template.json') }}"
      - path: "{{ fluentd_config_dir }}/es_templates/nginx_access_template.json"
        state: present
        content: "{{ lookup('file', 'files/nginx_access_template.json') }}"
    # ________________________________________nginx
    os_www_root_dir:
      FreeBSD: /usr/local/www/nginx
      OpenBSD: /var/www/htdocs
      Debian: /var/www/html
      RedHat: /usr/share/nginx/html
    nginx_config: |
      user {{ nginx_user }};
      {% if ansible_os_family == 'Debian' or ansible_os_family == 'RedHat' %}
      pid /run/nginx.pid;
      {% endif %}
      worker_processes 1;
      error_log {{ nginx_error_log_file }};
      events {
        worker_connections 1024;
      }
      http {
        upstream backend_kibana {
          server 127.0.0.1:5601;
          keepalive 60;
        }
        include {{ nginx_conf_dir }}/mime.types;
        default_type application/octet-stream;
        sendfile on;
        gzip on;
        keepalive_timeout 60;

        # access.log in JSON for easier processing
        log_format json escape=json
            '{ '
                '"nginx": { '
                    '"access": { '
                        '"remote_ip": "$remote_addr", '
                        '"user_name": "$remote_user", '
                        '"time": "$time_local", '
                        '"method": "$request_method", '
                        '"host": "$host", '
                        '"url": "$request_uri", '
                        '"http_protocol": "$server_protocol", '
                        '"scheme": "$scheme", '
                        '"response_code": "$status", '
                        '"body_sent": { '
                            '"bytes": "$body_bytes_sent" '
                        '}, '
                        '"referrer": "$http_referer", '
                        '"agent": "$http_user_agent" '
                    '}, '
                    '"request": "$request", '
                    '"connection": "$connection", '
                    '"pipe": "$pipe", '
                    '"connection_requests": "$connection_requests", '
                    '"time": { '
                        '"iso8601": "$time_iso8601", '
                        '"msec": "$msec", '
                        '"request": "$request_time" '
                    '}, '
                    '"http": { '
                        '"response": { '
                          '"content_type": "$sent_http_content_type", '
                          '"connection": "$sent_http_connection", '
                          '"content_encoding": "$sent_http_content_encoding", '
                          '"content_length": "$sent_http_content_length", '
                          '"transfer_encoding": "$sent_http_transfer_encoding", '
                          '"cache_control:": "$sent_http_cache_control", '
                          '"vary": "$sent_http_vary", '
                          '"body_bytes_sent": "$body_bytes_sent", '
                          '"bytes_sent": "$bytes_sent", '
                          '"status": "$status"'
                        '}, '
                        '"request": { '
                          '"accept": "$http_accept", '
                          '"accept_encoding": "$http_accept_encoding", '
                          '"accept_language": "$http_accept_language", '
                          '"connection": "$http_connection", '
                          '"content_length": "$http_content_length", '
                          '"content_type": "$http_content_type", '
                          '"dnt": "$http_dnt", '
                          '"origin": "$http_origin", '
                          '"method": "$request_method", '
                          '"length": "$request_length", '
                          '"referrer": "$http_referer", '
                          '"id": "$request_id", '
                          '"uri": "$request_uri"'
                        '}, '
                        '"x_forwarded_for": "$http_x_forwarded_for", '
                        '"x_forwarded_proto": "$http_x_forwarded_proto", '
                        '"x_real_ip": "$http_x_real_ip", '
                        '"dnt": "$http_dnt", '
                        '"x_scheme": "$http_x_scheme" '
                    '}, '
                    '"upstream": { '
                        '"addr": "$upstream_addr", '
                        '"status": "$upstream_status", '
                        '"response_time": "$upstream_response_time", '
                        '"connect_time": "$upstream_connect_time", '
                        '"cache_status": "$upstream_cache_status", '
                        '"header_time": "$upstream_header_time" '
                    '} '
                '} '
            '}';
        access_log {{ nginx_access_log_file }} json;

        # WebSocket mapping
        map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
        }
        server {
          listen 80;
          server_name localhost;
          location / {
            proxy_pass http://backend_kibana;

            # disable buffering of responses from the proxied server to keep
            # synchronous interaction with kibana
            proxy_buffering off;

            # regular reverse proxy headers
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;

            # WebSocket proxying
            # http://nginx.org/en/docs/http/websocket.html
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
          }
        }
      }

    # ________________________________________kibana
    os_kibana_package:
      Debian: opendistroforelasticsearch-kibana
      FreeBSD: "{{ __kibana_package }}"
      OpenBSD: "{{ __kibana_package }}"
    kibana_package: "{{ os_kibana_package[ansible_os_family] }}"

    kibana_listen_host: localhost
    kibana_listen_port: 5601

    os_kibana_config:
      FreeBSD:
        # XXX kibana version 6.x
        server.port: "{{ kibana_listen_port }}"
        server.host: 0.0.0.0
        kibana.index: .kibana
        logging.dest: "{{ kibana_log_dir }}/kibana.log"
        elasticsearch.url: http://localhost:9200
      OpenBSD:
        # XXX kibana version 6.x
        server.port: "{{ kibana_listen_port }}"
        server.host: 0.0.0.0
        kibana.index: .kibana
        logging.dest: "{{ kibana_log_dir }}/kibana.log"
        elasticsearch.url: http://localhost:9200
      Debian:
        # XXX kibana version 7.x
        server.port: "{{ kibana_listen_port }}"
        server.host: 0.0.0.0
        kibana.index: .kibana
        logging.dest: "{{ kibana_log_dir }}/kibana.log"
        elasticsearch.hosts: ["https://localhost:9200"]
        elasticsearch.ssl.verificationMode: none
        elasticsearch.username: admin
        elasticsearch.password: admin
    kibana_config: "{{ os_kibana_config[ansible_os_family] }}"
    os_kibana_flags:
      OpenBSD: ""
      FreeBSD: |
        kibana_user="{{ kibana_user }}"
        kibana_group="{{ kibana_group }}"
        kibana_log="{{ kibana_log_dir }}/kibana.log"
        kibana_config="{{ kibana_config_file }}"
      Debian: |
        user="kibana"
        group="kibana"
        chroot="/"
        chdir="/"
        nice=""
        KILL_ON_STOP_TIMEOUT=1
      RedHat: ""
    kibana_flags: "{{ os_kibana_flags[ansible_os_family] }}"

    # ________________________________________elasticsearch
    os_opendistroforelasticsearch_extra_packages:
      FreeBSD: []
      Debian:
        # XXX install 7.2.0 becasue the current opendistroforelasticsearch
        # depends on 7.2.0, but the latest elasticsearch-oss is 7.4.0
        #
        # opendistroforelasticsearch : Depends: elasticsearch-oss (= 7.2.0) but 7.4.0 is to be installed
        - elasticsearch-oss=7.2.0
      RedHat: []
    opendistroforelasticsearch_extra_packages: "{{ os_opendistroforelasticsearch_extra_packages[ansible_os_family] }}"
    os_java_packages:
      FreeBSD: []
      Debian:
        - openjdk-11-jdk
      RedHat:
        - java-11-openjdk-devel
    java_packages: "{{ os_java_packages[ansible_os_family] }}"
    os_sysctl:
      FreeBSD:
        kern.maxfilesperproc: 65536
        security.bsd.unprivileged_mlock: 1
      Debian: []
      RedHat: []
    sysctl: "{{ os_sysctl[ansible_os_family] }}"
    os_opendistroforelasticsearch_package:
      FreeBSD: "{{ __opendistroforelasticsearch_package }}"
      Debian: "{{ __opendistroforelasticsearch_package }}"
      RedHat: opendistroforelasticsearch-1.2.0-1
    opendistroforelasticsearch_package: "{{ os_opendistroforelasticsearch_package[ansible_os_family] }}"
    os_opendistroforelasticsearch_flags:
      FreeBSD: |
        elasticsearch_java_home={{ opendistroforelasticsearch_java_home }}
      Debian: |
        ES_PATH_CONF={{ opendistroforelasticsearch_conf_dir }}
        ES_STARTUP_SLEEP_TIME=5
        MAX_OPEN_FILES=65535
        MAX_LOCKED_MEMORY=unlimited
      RedHat: |
        ES_PATH_CONF={{ opendistroforelasticsearch_conf_dir }}
        ES_STARTUP_SLEEP_TIME=5
        MAX_OPEN_FILES=65535
        MAX_LOCKED_MEMORY=unlimited
    opendistroforelasticsearch_flags: "{{ os_opendistroforelasticsearch_flags[ansible_os_family] }}"
    opendistroforelasticsearch_jvm_options: |
      -Xms1024m
      -Xmx1024m
      -Xmx1g
      -XX:+UseConcMarkSweepGC
      -XX:CMSInitiatingOccupancyFraction=75
      -XX:+UseCMSInitiatingOccupancyOnly
      -Des.networkaddress.cache.ttl=60
      -Des.networkaddress.cache.negative.ttl=10
      -XX:+AlwaysPreTouch
      -Xss1m
      -Djava.awt.headless=true
      -Dfile.encoding=UTF-8
      -Djna.nosys=true
      -XX:-OmitStackTraceInFastThrow
      -Dio.netty.noUnsafe=true
      -Dio.netty.noKeySetOptimization=true
      -Dio.netty.recycler.maxCapacityPerThread=0
      -Dlog4j.shutdownHookEnabled=false
      -Dlog4j2.disable.jmx=true
      -Djava.io.tmpdir=${ES_TMPDIR}
      -XX:+HeapDumpOnOutOfMemoryError
      -XX:HeapDumpPath=data
      -XX:ErrorFile={{ opendistroforelasticsearch_log_dir }}/hs_err_pid%p.log
      -XX:+UseCompressedOops
      # XXX https://github.com/opendistro-for-elasticsearch/performance-analyzer/issues/54
      # `100` comes from `/usr/bin/getconf CLK_TCK`
      -Dclk.tck=100
      -Djdk.attach.allowAttachSelf=true
      -Djava.security.policy=file:///usr/share/elasticsearch/plugins/opendistro_performance_analyzer/pa_config/es_security.policy
    opendistroforelasticsearch_config:
      opendistro_security.disabled: false
      discovery.type: single-node
      network.publish_host: ["10.0.2.15"]
      path.data: "{{ opendistroforelasticsearch_db_dir }}"
      http.port: "{{ opendistroforelasticsearch_http_port }}"
      path.logs: "{{ opendistroforelasticsearch_log_dir }}"
      node.data: "true"
      http.compression: "true"
      network.host:
        - _local_
        - _site_
      cluster.name: testcluster
      node.name: testnode
      http.cors.enabled: "true"
      http.cors.allow-origin: "*"
      http.cors.max-age: 86400
      http.cors.allow-methods: "OPTIONS, HEAD, GET, POST, PUT, DELETE"
      http.cors.allow-headers: "X-Requested-With, Content-Type, Content-Length"
      http.cors.allow-credentials: "true"
      # _________________________TLS
      opendistro_security.ssl.transport.pemcert_filepath: node.pem
      opendistro_security.ssl.transport.pemkey_filepath: node-key.pem
      opendistro_security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
      opendistro_security.ssl.transport.enforce_hostname_verification: false
      opendistro_security.ssl.http.enabled: true
      opendistro_security.ssl.http.pemcert_filepath: node.pem
      opendistro_security.ssl.http.pemkey_filepath: node-key.pem
      opendistro_security.ssl.http.pemtrustedcas_filepath: root-ca.pem
      opendistro_security.allow_default_init_securityindex: true
      opendistro_security.authcz.admin_dn:
        - CN=localhost,O=Internet Widgits Pty Ltd,ST=Some-State,C=AU
      opendistro_security.nodes_dn:
        - CN=localhost,O=Internet Widgits Pty Ltd,ST=Some-State,C=AU
      opendistro_security.audit.type: internal_elasticsearch
      opendistro_security.enable_snapshot_restore_privilege: true
      opendistro_security.check_snapshot_restore_write_privileges: true
      opendistro_security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
      cluster.routing.allocation.disk.threshold_enabled: false
      node.max_local_storage_nodes: 3
      opendistro_security.audit.config.disabled_rest_categories: NONE
      opendistro_security.audit.config.disabled_transport_categories: NONE
      opendistro_security.allow_unsafe_democertificates: true
      opendistro_security.compliance.salt: abcdefghijklmnopqrstuvqxyz1234567890
    opendistroforelasticsearch_plugins:
      - name: opendistro_security
        src: https://d3g5vo6xdbdb9a.cloudfront.net/downloads/elasticsearch-plugins/opendistro-security/opendistro_security-1.2.0.0.zip
    # ________________________________________x509
    x509_certificate_debug_log: yes
    x509_certificate:
      - name: node
        state: present
        public:
          path: "{{ opendistroforelasticsearch_conf_dir }}/node.pem"
          key: |
            -----BEGIN CERTIFICATE-----
            MIIDMzCCAhsCCQDFJMQePWLjHzANBgkqhkiG9w0BAQsFADBeMQswCQYDVQQGEwJB
            VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
            cyBQdHkgTHRkMRcwFQYDVQQDDA5jYS5leG1hcGxlLm9yZzAeFw0xOTEwMTAwMjMx
            MThaFw0xOTExMDkwMjMxMThaMFkxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21l
            LVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNV
            BAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbc
            g+Wu9h+zSQDcY59exw2SYcoKCyjjICxU7dyV2UWDuwHMrp0hPKE6Ihd41ftgWVOl
            fIra3I0gmGteWztlaEP3wx0tnZdopBJgMegiPjmUcz/w3wqtzgSqH3fTKbQhO4qL
            jDnwJfOxpoUWdR69DXPFLTi5HrD1/GwmT3ra6ySJGVRKKGnl9ZukwnEqQs58e/+T
            GCwnGOjkItwE5kxEtPSNRqsm+zfJyy6hwoeCGHyqxwiRTwSNjRdL+rQjGzGPj/OU
            VDDuXV389+EmKYbTfH790VRULNsT22VjFCwW1yAsmJTFKVktjcGjdcH2iGtLN7CO
            QVLNR9QIl+x2+9XXSxUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAnZEGtf28tpzy
            36hGJJxLHqewb7xRnoXnm5d5f3x1vTlmtU/Y3NZg4eqV8fBJr6Z9IpgAe4Mzmzna
            4j4jcUHraKrat/UKxiCqqP+P3FggRhUz5c4aC/pCOF3MRzD4Q9hZHV3gLoZMzerv
            eza1HuWnaRg2hAIBOlb9Oyn7K4LgMdH3Un4L2tH3eyp0KsMQj/JAW0iZFtVuohzu
            R7jSBWvYE3+siM2mpHUw6sf5uevgPTyEZg3ionLsGg0M6XdpvgT61m/pE3+7xjQ1
            I9Eg8TdwRq5gAv0Ywl5BuXyIA40x7x87y4qPpqMpBsc8u7ESlffUs2mor0qfQvm7
            mzd3/gNRFw==
            -----END CERTIFICATE-----
        secret:
          path: "{{ opendistroforelasticsearch_conf_dir }}/node-key.pem"
          owner: "{{ opendistroforelasticsearch_user }}"
          group: "{{ opendistroforelasticsearch_group }}"
          key: |
            -----BEGIN PRIVATE KEY-----
            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCm3IPlrvYfs0kA
            3GOfXscNkmHKCgso4yAsVO3cldlFg7sBzK6dITyhOiIXeNX7YFlTpXyK2tyNIJhr
            Xls7ZWhD98MdLZ2XaKQSYDHoIj45lHM/8N8Krc4Eqh930ym0ITuKi4w58CXzsaaF
            FnUevQ1zxS04uR6w9fxsJk962uskiRlUSihp5fWbpMJxKkLOfHv/kxgsJxjo5CLc
            BOZMRLT0jUarJvs3ycsuocKHghh8qscIkU8EjY0XS/q0Ixsxj4/zlFQw7l1d/Pfh
            JimG03x+/dFUVCzbE9tlYxQsFtcgLJiUxSlZLY3Bo3XB9ohrSzewjkFSzUfUCJfs
            dvvV10sVAgMBAAECggEAHG83isxl5MEIj7z+vQnJoeZwA53yiOUrdmKCpjRi8hWg
            qI3Ys64WRuNBK/7LeCrTDg4FSyRAsUv8rU9G/LgrLGnsNeywDj0muHrsBkLPl8BU
            Y3EIkSlNEj5rXl/9m1SOcO2W18i0rvJ3Dfblvnc486GGM0RYlo9UlJlysdzcdT0h
            ORjgSzREH2J6S6PB5T/waxZ6XGopy3qkF2Q+Bs7K+Rx1uIrztsPMfJ5YcdPTNEiD
            YDNwWCI5FGI1Wq/5YtpkYlkZx/z+CcAX5njoQKyyZdOJVzUwVRxdEtOPALOYnB8x
            pUmxugKbE8d2pAYbV513dG6r+BXGyA4QptvyGxWXgQKBgQDVqYL1u+DrbSDYCBjd
            s379CD64+vtBe6Yfq6QDQS9XGAtTyYcAj+9oUzTew63vOlgfSZ/xVKcOq4Re88mn
            +KIkl1DA7+O/l8os38lrzDgbZO8vLE+VFpS+TbUegkOFRFpldActyLV6JuyfO58D
            PsDO+xxtw4lneIlCIM9MOiqXbwKBgQDH7O456+XhYy2BMV1fB+BkTnX9M0SjlXwB
            Tv7WUfEEMLFJsHae7P+4q396gBAx4CD3gBH+zBULeRdW3wkJKc22QS5kSJaU0T59
            1bL1n7hIeIu36m+Due+o2PLeda+Hx3hk56JQkXhTpDEZAx2WGOZ81lATOKtUTdDs
            bAISGyGjuwKBgDb2m0zRnwORGCDavGLT2PgIlfIKBnaK82o0QkXgD+iMs+VC82qu
            nDyvIuunVOg0jxTFYNK5HxyD/NJcTmTabgORtWFclK7lwkmW6/7CEzDg3zK4aGSG
            4Y6u+Me3ZN00fziYB3y8pAqfVsGDmd1A2GKmcGLAKWmntU+AlzMZx3kbAoGBAIui
            Sry/qv4hc+3Q2aL+8FV+i1/+B8mtJUAQuWJdNtWzYI/UJPVZGD4V4eJgQW9kWAIl
            O+xXA7fQqmFtQ3VX8iqCGfHG1Q05m8jtkaGGHYLYVtVscthw7Bdk9zQyxBc0VT08
            nxxgjcb1XalXiLmFyK2WTbUvFlK6StplkYit1G/zAoGAYdYiIZmixKsrtdH/CKQY
            kGBqJY9H+3QQB9fckHROtdOalWrJJCUBF+jEa2e6rLbFSpzj2Dpot2QLiENBMZuH
            6DAksJ9+B3lxbQxdssFaFa5NocS2v6oAyLbEGNIOEkQ54f0v5HfaPVeLElK4Hs18
            f5MIWEE6V+z+aNg7aXdrLtU=
            -----END PRIVATE KEY-----
      - name: root-ca
        state: present
        public:
          path: "{{ opendistroforelasticsearch_conf_dir }}/root-ca.pem"
          key: |
            -----BEGIN CERTIFICATE-----
            MIIDMzCCAhsCCQDFJMQePWLjHzANBgkqhkiG9w0BAQsFADBeMQswCQYDVQQGEwJB
            VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
            cyBQdHkgTHRkMRcwFQYDVQQDDA5jYS5leG1hcGxlLm9yZzAeFw0xOTEwMTAwMjMx
            MThaFw0xOTExMDkwMjMxMThaMFkxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21l
            LVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNV
            BAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbc
            g+Wu9h+zSQDcY59exw2SYcoKCyjjICxU7dyV2UWDuwHMrp0hPKE6Ihd41ftgWVOl
            fIra3I0gmGteWztlaEP3wx0tnZdopBJgMegiPjmUcz/w3wqtzgSqH3fTKbQhO4qL
            jDnwJfOxpoUWdR69DXPFLTi5HrD1/GwmT3ra6ySJGVRKKGnl9ZukwnEqQs58e/+T
            GCwnGOjkItwE5kxEtPSNRqsm+zfJyy6hwoeCGHyqxwiRTwSNjRdL+rQjGzGPj/OU
            VDDuXV389+EmKYbTfH790VRULNsT22VjFCwW1yAsmJTFKVktjcGjdcH2iGtLN7CO
            QVLNR9QIl+x2+9XXSxUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAnZEGtf28tpzy
            36hGJJxLHqewb7xRnoXnm5d5f3x1vTlmtU/Y3NZg4eqV8fBJr6Z9IpgAe4Mzmzna
            4j4jcUHraKrat/UKxiCqqP+P3FggRhUz5c4aC/pCOF3MRzD4Q9hZHV3gLoZMzerv
            eza1HuWnaRg2hAIBOlb9Oyn7K4LgMdH3Un4L2tH3eyp0KsMQj/JAW0iZFtVuohzu
            R7jSBWvYE3+siM2mpHUw6sf5uevgPTyEZg3ionLsGg0M6XdpvgT61m/pE3+7xjQ1
            I9Eg8TdwRq5gAv0Ywl5BuXyIA40x7x87y4qPpqMpBsc8u7ESlffUs2mor0qfQvm7
            mzd3/gNRFw==
            -----END CERTIFICATE-----
        secret:
          path: "{{ opendistroforelasticsearch_conf_dir }}/root-ca-key.pem"
          owner: "{{ opendistroforelasticsearch_user }}"
          group: "{{ opendistroforelasticsearch_group }}"
          key: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEowIBAAKCAQEA2vu3zNFLi5s3afKZsjj4WYTqOyQeu7ajCSOVFWu3/rGUQCxY
            whaN8sZWJ4Tb3giSgFt9daxIAjFT0RNZm9HI9+hthlyQ6EmVtmHv8QOIjWTrIT1S
            9pZuyHsWcnin2FMX/UM1VxJSZQ3lsKhzbqBlGqmRuWbYi4hqsRxAnDuU78frvqDC
            gzFgjIEnDZMJeooM+ZLUrXuIIPi+auEl/7n8u3C/anLtt+K5UMCvZrCUSwSycPx2
            qFdPGpDXedlsfkxzW+mk3s38dHOG/5+qxwZiIexTgRYBRmoASZe5ksSVxKjvEWfF
            Zv1WoOMivEDwXmgbxojXc1hWfKAT6ArgitTyrQIDAQABAoIBAQDQjgtutaYNP7Z2
            4OYgJsHgAAZUbQIYJMkBWzIRRJXnq5hVxeaCcpieLua+nHoJ7IAaXwgNmha6f+Aj
            rxoYnKOZ93LYFDCuCebb3Ep4b7UNdJ+6+Hya/IplxVSLkP3JuNmQCwIx+vEd7S5k
            IQpOwdOIoRZ4TMrPmQyDwTSHlvcxpKJxVZ0XGSAg9jzqhFpmbn28/GUr8iQD2Mo0
            U9N6ToddHyDpll0eJouoXesIbvxwyFI0vdHki5fl6LmazKzKjGtr8yD8QqP5D403
            JdzSNqwElQd7QKpvMPaL1dXpdUUiF+9TUXjt8A1MBtVsSmXMwMiqOfuzPjAj7wkc
            smfTxjABAoGBAPJ8wjWzZV1QDxzYRYMRCuVSuJrLn4jA8jEEf3X5ej3SMyaVaBOJ
            YtSuoV4C66jtgHRiQTcUIewiZAurmemeR/VRsW2RPC/w2SYZRytKKm8l5YM2iXSK
            /VgWTdVSbOhzJYfV0Azp47pY2yW3WZop3lnzcXPM/jthI6NnX4KcdI9BAoGBAOcv
            qIw8DSXYJUStIJ4wf5jfP2jmjeepA0d007XfZCkLE3ltlrxN2llAf/fq+sbhEtTf
            vpFnEcRqSvw4y8jd0G2IrvFZoSdr1SbtF6UfdixcB9Br2kqElNxzSX2eNHFOxOPw
            L+snKT+i1pFAXCOlMBedqZNetyWqBnWSvARUKvRtAoGAQoLl4kTqsMWc35SSvHiY
            PH6MFCl2ANSrmbZaH8nmNb7KOPMSMQmmCiA8MsUqTpOWgFXS/YCQLWzhdDIFbYb0
            xd06hYsorx2o8kJMuxsEuKf0ZCE5YrYc92RmxPRu2vN6f9+tyVz+Ecb9lULNWPPT
            AWk83T6FHVRvqgpYsEKp1gECgYBZ6R8T6wbyAO39l5dn7lSxj6GJmqD1x7WOxNDR
            mt/JVpVsVEKbWWvh6kPal3iQgFhikeH7iqpOSUiAb1ZR+HJnJxFirAkQ2886JFtd
            zK6Y8fHYDRoIgSej1PJv+GdM6eWJAJCiU8inBx2LwAwVkNjzVk3tEpkH/OgmMbsN
            s+5AwQKBgDXibuSSsisvdIN9hsSdCm2TBAx2yiVS/Jm64lVjr+PJpswTG0OY9YLO
            vN7YiVwEifmpgjwYqwbygU47h3OH22fn+A04geI5XPQJytWOgVfzh2oBWoHcFApi
            zrAM2P/g2Lnw/ttxnFUHpLe+f2uq+PTgidDl58R2tbt8kTO5QpGG
            -----END RSA PRIVATE KEY-----
      - name: admin
        state: present
        public:
          path: "{{ opendistroforelasticsearch_conf_dir }}/admin.pem"
          key: |
            -----BEGIN CERTIFICATE-----
            MIIDMzCCAhsCCQDFJMQePWLjHjANBgkqhkiG9w0BAQsFADBeMQswCQYDVQQGEwJB
            VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
            cyBQdHkgTHRkMRcwFQYDVQQDDA5jYS5leG1hcGxlLm9yZzAeFw0xOTEwMTAwMjI2
            MDlaFw0xOTExMDkwMjI2MDlaMFkxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21l
            LVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxEjAQBgNV
            BAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMsB
            G8zk8zYLb7KswWprNaAVBnGyNkbBa3eWH3NjsP6TIiSQWii80aSPk4OxI2juLvqX
            BACS3sqAd0qW1HUuFfYqOMW4zCPyxPiBBY+3qZP3VlmDWhVZeRnH9RuEuvp24+TX
            uRv8efri2I3BbKlRObaGwYuwz/S7mCZJX+QkLgOwnkZtjkkoMHQ80UF1C98iroUB
            qASfVOYtNSWZXj3WsR07qI8Juas2ebenMeRMizZIq2M/APJbawZhw1THOUJpL4Jx
            sPr/cJkL3n5HU3S7KLaeePItxmWC1oYq452CDytGFAQoL1U8J2JpJ4XJrqPhiEec
            3JvWD53p8ViSjoNVXkECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAUfCvEv7D9j+7
            heOYop/OsY6hFHaPIaeYeHnDkZUGcS+9THjYjoZwML0HzsNbunmE9xw6nj6Fp9lh
            Zz+ds93JU4uthIcR5FJrvGJr3cCgkx0CyTMaVMZ3aUYszuWWv/ztF0KbeX5g0OmY
            MDhfH0QLh7crp4vymPuxgzECiyTizuOfb41FaIx32ks3fEUNe6DhGPyjeXjB8AEW
            noZYNT2Iys06qjpIiPa3yKrk38wALRsnY5eJw844YOmTZodlx+rrjCqkwzsPAO52
            quywFajsDuy+FwnxJSibPCgbRqJfOYmCKsWJrPc9LyvEEy9l+1yxFNp2z1Zy7iUe
            qcmtZpbkfg==
            -----END CERTIFICATE-----
        secret:
          path: "{{ opendistroforelasticsearch_conf_dir }}/admin-key.pem"
          owner: "{{ opendistroforelasticsearch_user }}"
          group: "{{ opendistroforelasticsearch_group }}"
          key: |
            -----BEGIN PRIVATE KEY-----
            MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDLARvM5PM2C2+y
            rMFqazWgFQZxsjZGwWt3lh9zY7D+kyIkkFoovNGkj5ODsSNo7i76lwQAkt7KgHdK
            ltR1LhX2KjjFuMwj8sT4gQWPt6mT91ZZg1oVWXkZx/UbhLr6duPk17kb/Hn64tiN
            wWypUTm2hsGLsM/0u5gmSV/kJC4DsJ5GbY5JKDB0PNFBdQvfIq6FAagEn1TmLTUl
            mV491rEdO6iPCbmrNnm3pzHkTIs2SKtjPwDyW2sGYcNUxzlCaS+CcbD6/3CZC95+
            R1N0uyi2nnjyLcZlgtaGKuOdgg8rRhQEKC9VPCdiaSeFya6j4YhHnNyb1g+d6fFY
            ko6DVV5BAgMBAAECggEAJYuh8aZSmSdKVFiBOUZ015Or6nFUeoehca+xR20juiHK
            Scrs8eXiPDZVySCE9Q5AYBZ4JgcD754M8h2tU7LfWvT6JQ+Fqgxng7KRLcCBO52e
            OdYCXjp7HFqQKbPFxTch9Rw030k14kH8XVNt3m7oZqrLtyNPgusDO+mMM6zBWesG
            yhEtrzXFF+mskOLl7xp/0n/WDO7hsz3PZkEx/hGyNpxHikE+or13lRtSogeZEybv
            4Y1hhKcZwsVQOtsoSG7fcBwk4F0hJlesOO1M9UPCE8kUjs97oJfLQukuWqap+T4r
            USECJsVwcsjsruqhr+UQmvDp22PqRGRh6kuZbZwh5QKBgQD8GuWOMAC8R19DPgc3
            ggfQz97uYwBb2cw/xwCCHVjhF/WQfgPg7g7MNsVr256imZuzsjQIQJEX8tmBgdb1
            p9Ebs8C+L8xeIfsi7GqlPOaHm80q8sF1SpeQZ36+23SthHN1JT6pLMl8D8WscBZo
            Kt5NlzpcNCtQ8aqqV/FXyPPp3wKBgQDOJANZPTfWOQO68hm7Zj2sihQTvFb1yxBU
            F89ol8kvajKYw0Mef/IsTEtRS08pE6AVWvjJC9Wi5JSBxdtaGxDje/4fXj1Ili3u
            I/DKIJVCz9uq4y8vaqO4npw7/nTGCeqfZHh19pzMuwHxPEfSvjqzr/5fyecSYzL/
            +0EZz1H73wKBgA89qQcRi9nWDsJH67PFXqeXCYkr3weugRSR+Uvkbk0dX7EejSl5
            +tcJsKG2oz59PtZ8PX0KOjtSaSfVK6OqQ5ADK/HTfe1q7H3OARyANAeauaqRBnUK
            z2Lhft4W8lTTHw/D8qfTl1KyuWaVWCVwAgR60gJk/QFlusWVj3eZJHXNAoGAHFiv
            bTIR349vh+GK0E465OMH577aZmpKEIZFqyhULgT4eDFBpYwKjTTglok4lXlxZf5g
            f6T097VfBolipH1cUSvXwhB/dN/R6RFgJytb2xgiKNmcv3R2lwiYi1duT11Fui1i
            szX6UdzVY4rahYxLHjJxVFK7R7gEZ1bxmM79gxkCgYBfeU0SNr9oUL8Rw7pf1pe6
            H5f1zyPDIKWhzU6aaIdGKr5wUIcQT0/Z75O/JBxXeq3bBkH/eZU/giUE33kpVPsv
            fx/baNmdyVXvHEn9dQd7i/0LUXF1QgJoreYDz9QV4gYzDOtyWiA/XR+snNsTBH7R
            0YX6LjQg646+IyFoK6qw+w==
            -----END PRIVATE KEY-----
